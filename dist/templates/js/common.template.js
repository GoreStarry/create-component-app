"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generateImports = exports.generateClassComponent = undefined;

var _config = require("../../config.json");

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const COMPONENT_TYPES = {
  pure: "PureComponent",
  class: "Component"
};

function generateReactImport(componentType) {
  return `import React${componentType !== "stateless" ? `, { ${COMPONENT_TYPES[componentType]} }` : ""} from 'react'`;
}

function generateComponentMethods(componentMethods) {
  if (componentMethods.length === 0) {
    return "";
  }
  let methods = "";
  componentMethods.forEach(method => {
    methods += `\n\xa0\xa0\xa0\xa0${method}(){}\n`;
  });
  return methods;
}

function generateImports(COMPONENT_NAME, componentType, { cssExtension = _config2.default.cssExtension, styleFileName, cssModule }) {
  return `${generateReactImport(componentType)}
import PropTypes from 'prop-types'
${cssModule ? "// import classNames from 'classnames/bind';" : ""}
${cssExtension ? `import styles from './${styleFileName}.${cssExtension}'` : ""}
${cssModule ? "// const cx = classNames.bind(styles);';" : ""}
`;
}

function generateClassComponent(COMPONENT_NAME, componentType, {
  cssExtension = _config2.default.cssExtension,
  componentMethods = _config2.default.componentMethods,
  cssModule,
  styleFileName
}) {
  const className = cssModule ? `{styles.${COMPONENT_NAME}}` : `"${COMPONENT_NAME}"`;
  return `${generateImports(COMPONENT_NAME, componentType, {
    cssExtension,
    styleFileName,
    cssModule
  })}

class ${COMPONENT_NAME} extends ${COMPONENT_TYPES[componentType]} {
    ${generateComponentMethods(componentMethods)}
    render() {
        return (
            <div className=${className}></div>
        );
    }
}

${COMPONENT_NAME}.propTypes = {}

${COMPONENT_NAME}.defaultProps = {}

export default ${COMPONENT_NAME}
`;
}

exports.generateClassComponent = generateClassComponent;
exports.generateImports = generateImports;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90ZW1wbGF0ZXMvanMvY29tbW9uLnRlbXBsYXRlLmpzIl0sIm5hbWVzIjpbIkNPTVBPTkVOVF9UWVBFUyIsInB1cmUiLCJjbGFzcyIsImdlbmVyYXRlUmVhY3RJbXBvcnQiLCJjb21wb25lbnRUeXBlIiwiZ2VuZXJhdGVDb21wb25lbnRNZXRob2RzIiwiY29tcG9uZW50TWV0aG9kcyIsImxlbmd0aCIsIm1ldGhvZHMiLCJmb3JFYWNoIiwibWV0aG9kIiwiZ2VuZXJhdGVJbXBvcnRzIiwiQ09NUE9ORU5UX05BTUUiLCJjc3NFeHRlbnNpb24iLCJzdHlsZUZpbGVOYW1lIiwiY3NzTW9kdWxlIiwiZ2VuZXJhdGVDbGFzc0NvbXBvbmVudCIsImNsYXNzTmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7QUFFQSxNQUFNQSxrQkFBa0I7QUFDdEJDLFFBQU0sZUFEZ0I7QUFFdEJDLFNBQU87QUFGZSxDQUF4Qjs7QUFLQSxTQUFTQyxtQkFBVCxDQUE2QkMsYUFBN0IsRUFBNEM7QUFDMUMsU0FBUSxlQUNOQSxrQkFBa0IsV0FBbEIsR0FDSyxPQUFNSixnQkFBZ0JJLGFBQWhCLENBQStCLElBRDFDLEdBRUksRUFDTCxlQUpEO0FBS0Q7O0FBRUQsU0FBU0Msd0JBQVQsQ0FBa0NDLGdCQUFsQyxFQUFvRDtBQUNsRCxNQUFJQSxpQkFBaUJDLE1BQWpCLEtBQTRCLENBQWhDLEVBQW1DO0FBQ2pDLFdBQU8sRUFBUDtBQUNEO0FBQ0QsTUFBSUMsVUFBVSxFQUFkO0FBQ0FGLG1CQUFpQkcsT0FBakIsQ0FBeUJDLFVBQVU7QUFDakNGLGVBQVkscUJBQW9CRSxNQUFPLFFBQXZDO0FBQ0QsR0FGRDtBQUdBLFNBQU9GLE9BQVA7QUFDRDs7QUFFRCxTQUFTRyxlQUFULENBQ0VDLGNBREYsRUFFRVIsYUFGRixFQUdFLEVBQUVTLGVBQWUsaUJBQWVBLFlBQWhDLEVBQThDQyxhQUE5QyxFQUE2REMsU0FBN0QsRUFIRixFQUlFO0FBQ0EsU0FBUSxHQUFFWixvQkFBb0JDLGFBQXBCLENBQW1DOztFQUU3Q1csWUFBWSw4Q0FBWixHQUE2RCxFQUFHO0VBQ2hFRixlQUFnQix5QkFBd0JDLGFBQWMsSUFBR0QsWUFBYSxHQUF0RSxHQUEyRSxFQUFHO0VBQzlFRSxZQUFZLDBDQUFaLEdBQXlELEVBQUc7Q0FKNUQ7QUFNRDs7QUFFRCxTQUFTQyxzQkFBVCxDQUNFSixjQURGLEVBRUVSLGFBRkYsRUFHRTtBQUNFUyxpQkFBZSxpQkFBZUEsWUFEaEM7QUFFRVAscUJBQW1CLGlCQUFlQSxnQkFGcEM7QUFHRVMsV0FIRjtBQUlFRDtBQUpGLENBSEYsRUFTRTtBQUNBLFFBQU1HLFlBQVlGLFlBQ2IsV0FBVUgsY0FBZSxHQURaLEdBRWIsSUFBR0EsY0FBZSxHQUZ2QjtBQUdBLFNBQVEsR0FBRUQsZ0JBQWdCQyxjQUFoQixFQUFnQ1IsYUFBaEMsRUFBK0M7QUFDdkRTLGdCQUR1RDtBQUV2REMsaUJBRnVEO0FBR3ZEQztBQUh1RCxHQUEvQyxDQUlQOztRQUVHSCxjQUFlLFlBQVdaLGdCQUFnQkksYUFBaEIsQ0FBK0I7TUFDM0RDLHlCQUF5QkMsZ0JBQXpCLENBQTJDOzs7NkJBR3BCVyxTQUFVOzs7OztFQUtyQ0wsY0FBZTs7RUFFZkEsY0FBZTs7aUJBRUFBLGNBQWU7Q0FuQjlCO0FBcUJEOztRQUVRSSxzQixHQUFBQSxzQjtRQUF3QkwsZSxHQUFBQSxlIiwiZmlsZSI6ImNvbW1vbi50ZW1wbGF0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWZhdWx0T3B0aW9ucyBmcm9tIFwiLi4vLi4vY29uZmlnLmpzb25cIjtcblxuY29uc3QgQ09NUE9ORU5UX1RZUEVTID0ge1xuICBwdXJlOiBcIlB1cmVDb21wb25lbnRcIixcbiAgY2xhc3M6IFwiQ29tcG9uZW50XCIsXG59O1xuXG5mdW5jdGlvbiBnZW5lcmF0ZVJlYWN0SW1wb3J0KGNvbXBvbmVudFR5cGUpIHtcbiAgcmV0dXJuIGBpbXBvcnQgUmVhY3Qke1xuICAgIGNvbXBvbmVudFR5cGUgIT09IFwic3RhdGVsZXNzXCJcbiAgICAgID8gYCwgeyAke0NPTVBPTkVOVF9UWVBFU1tjb21wb25lbnRUeXBlXX0gfWBcbiAgICAgIDogXCJcIlxuICB9IGZyb20gJ3JlYWN0J2A7XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlQ29tcG9uZW50TWV0aG9kcyhjb21wb25lbnRNZXRob2RzKSB7XG4gIGlmIChjb21wb25lbnRNZXRob2RzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBcIlwiO1xuICB9XG4gIGxldCBtZXRob2RzID0gXCJcIjtcbiAgY29tcG9uZW50TWV0aG9kcy5mb3JFYWNoKG1ldGhvZCA9PiB7XG4gICAgbWV0aG9kcyArPSBgXFxuXFx4YTBcXHhhMFxceGEwXFx4YTAke21ldGhvZH0oKXt9XFxuYDtcbiAgfSk7XG4gIHJldHVybiBtZXRob2RzO1xufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZUltcG9ydHMoXG4gIENPTVBPTkVOVF9OQU1FLFxuICBjb21wb25lbnRUeXBlLFxuICB7IGNzc0V4dGVuc2lvbiA9IGRlZmF1bHRPcHRpb25zLmNzc0V4dGVuc2lvbiwgc3R5bGVGaWxlTmFtZSwgY3NzTW9kdWxlIH1cbikge1xuICByZXR1cm4gYCR7Z2VuZXJhdGVSZWFjdEltcG9ydChjb21wb25lbnRUeXBlKX1cbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbiR7Y3NzTW9kdWxlID8gXCIvLyBpbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzL2JpbmQnO1wiIDogXCJcIn1cbiR7Y3NzRXh0ZW5zaW9uID8gYGltcG9ydCBzdHlsZXMgZnJvbSAnLi8ke3N0eWxlRmlsZU5hbWV9LiR7Y3NzRXh0ZW5zaW9ufSdgIDogXCJcIn1cbiR7Y3NzTW9kdWxlID8gXCIvLyBjb25zdCBjeCA9IGNsYXNzTmFtZXMuYmluZChzdHlsZXMpOyc7XCIgOiBcIlwifVxuYDtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVDbGFzc0NvbXBvbmVudChcbiAgQ09NUE9ORU5UX05BTUUsXG4gIGNvbXBvbmVudFR5cGUsXG4gIHtcbiAgICBjc3NFeHRlbnNpb24gPSBkZWZhdWx0T3B0aW9ucy5jc3NFeHRlbnNpb24sXG4gICAgY29tcG9uZW50TWV0aG9kcyA9IGRlZmF1bHRPcHRpb25zLmNvbXBvbmVudE1ldGhvZHMsXG4gICAgY3NzTW9kdWxlLFxuICAgIHN0eWxlRmlsZU5hbWUsXG4gIH1cbikge1xuICBjb25zdCBjbGFzc05hbWUgPSBjc3NNb2R1bGVcbiAgICA/IGB7c3R5bGVzLiR7Q09NUE9ORU5UX05BTUV9fWBcbiAgICA6IGBcIiR7Q09NUE9ORU5UX05BTUV9XCJgO1xuICByZXR1cm4gYCR7Z2VuZXJhdGVJbXBvcnRzKENPTVBPTkVOVF9OQU1FLCBjb21wb25lbnRUeXBlLCB7XG4gICAgY3NzRXh0ZW5zaW9uLFxuICAgIHN0eWxlRmlsZU5hbWUsXG4gICAgY3NzTW9kdWxlLFxuICB9KX1cblxuY2xhc3MgJHtDT01QT05FTlRfTkFNRX0gZXh0ZW5kcyAke0NPTVBPTkVOVF9UWVBFU1tjb21wb25lbnRUeXBlXX0ge1xuICAgICR7Z2VuZXJhdGVDb21wb25lbnRNZXRob2RzKGNvbXBvbmVudE1ldGhvZHMpfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSR7Y2xhc3NOYW1lfT48L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbiR7Q09NUE9ORU5UX05BTUV9LnByb3BUeXBlcyA9IHt9XG5cbiR7Q09NUE9ORU5UX05BTUV9LmRlZmF1bHRQcm9wcyA9IHt9XG5cbmV4cG9ydCBkZWZhdWx0ICR7Q09NUE9ORU5UX05BTUV9XG5gO1xufVxuXG5leHBvcnQgeyBnZW5lcmF0ZUNsYXNzQ29tcG9uZW50LCBnZW5lcmF0ZUltcG9ydHMgfTtcbiJdfQ==